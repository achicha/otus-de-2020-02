{"results": [{"node": {"raw_sql": "", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "raw_crime"], "unique_id": "seed.crimes_in_boston.raw_crime", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "raw_crime.csv", "original_file_path": "data/raw_crime.csv", "name": "raw_crime", "resource_type": "seed", "alias": "raw_crime", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/andreyev/Projects/Github/dbt_test/data/raw_crime.csv"}, "error": null, "status": null, "execution_time": 0.0189359188079834, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.872290Z", "completed_at": "2020-05-07T13:54:24.888192Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.889871Z", "completed_at": "2020-05-07T13:54:24.889883Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "raw_offense_codes"], "unique_id": "seed.crimes_in_boston.raw_offense_codes", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "raw_offense_codes.csv", "original_file_path": "data/raw_offense_codes.csv", "name": "raw_offense_codes", "resource_type": "seed", "alias": "raw_offense_codes", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/andreyev/Projects/Github/dbt_test/data/raw_offense_codes.csv"}, "error": null, "status": null, "execution_time": 0.0195009708404541, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.872195Z", "completed_at": "2020-05-07T13:54:24.889670Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.890088Z", "completed_at": "2020-05-07T13:54:24.890092Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_offense_codes') }}\n\n),\n\ndeduplicated as (\n\n    {#-\n        we need only one name per code. remove others.\n    #}\n    select tt.code, tt.name\n    from (\n        select\n            code\n            ,name\n            ,row_number() over (PARTITION BY code ORDER BY name) as rn\n        from source\n    ) tt\n    where rn = 1\n\n),\n\nrenamed as (\n\n    {#-\n        cast and rename fields\n    #}\n    select\n        code::INTEGER as offense_code_id,\n        name as offense_code_name\n    from deduplicated\n\n)\n\nselect * from renamed", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "staging", "stg_offense_codes"], "unique_id": "model.crimes_in_boston.stg_offense_codes", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "staging/stg_offense_codes.sql", "original_file_path": "models/staging/stg_offense_codes.sql", "name": "stg_offense_codes", "resource_type": "model", "alias": "stg_offense_codes", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_offense_codes"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.crimes_in_boston.raw_offense_codes"]}, "description": "", "columns": {"offense_code_id": {"name": "offense_code_id", "description": "PK", "meta": {}, "data_type": null, "tags": []}, "offense_code_name": {"name": "offense_code_name", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/crimes_in_boston/staging/stg_offense_codes.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"postgres\".\"dbt\".\"raw_offense_codes\"\n\n),\n\ndeduplicated as (\n    select tt.code, tt.name\n    from (\n        select\n            code\n            ,name\n            ,row_number() over (PARTITION BY code ORDER BY name) as rn\n        from source\n    ) tt\n    where rn = 1\n\n),\n\nrenamed as (\n    select\n        code::INTEGER as offense_code_id,\n        name as offense_code_name\n    from deduplicated\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"postgres\".\"dbt\".\"raw_offense_codes\"\n\n),\n\ndeduplicated as (\n    select tt.code, tt.name\n    from (\n        select\n            code\n            ,name\n            ,row_number() over (PARTITION BY code ORDER BY name) as rn\n        from source\n    ) tt\n    where rn = 1\n\n),\n\nrenamed as (\n    select\n        code::INTEGER as offense_code_id,\n        name as offense_code_name\n    from deduplicated\n\n)\n\nselect * from renamed", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012932777404785156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.903833Z", "completed_at": "2020-05-07T13:54:24.915842Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.916067Z", "completed_at": "2020-05-07T13:54:24.916074Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_crime') }}\n\n),\n\nrenamed as (\n\n    {#-\n        1. cast and rename fields\n        2. remove crimes without district\n    #}\n    select\n        INCIDENT_NUMBER as incident_number\n        ,OFFENSE_CODE::INTEGER as offense_code_id\n        ,DISTRICT as district\n        ,OCCURRED_ON_DATE::TIMESTAMP as incident_date\n        ,YEAR::INTEGER as year\n        ,MONTH::INTEGER as month\n        ,Lat::DECIMAL as latitude\n        ,Long::DECIMAL as longitude\n    from source\n    where district is not null\n\n)\n\n{#-\n    1. distinct by INCIDENT_NUMBER\n#}\nselect distinct * from renamed", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "staging", "stg_crime"], "unique_id": "model.crimes_in_boston.stg_crime", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "staging/stg_crime.sql", "original_file_path": "models/staging/stg_crime.sql", "name": "stg_crime", "resource_type": "model", "alias": "stg_crime", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_crime"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.crimes_in_boston.raw_crime"]}, "description": "", "columns": {"incident_number": {"name": "incident_number", "description": "PK = concat(incident_number, offense_code_id)", "meta": {}, "data_type": null, "tags": []}, "offense_code_id": {"name": "offense_code_id", "description": "", "meta": {}, "data_type": null, "tags": []}, "district": {"name": "district", "description": "", "meta": {}, "data_type": null, "tags": []}, "incident_date": {"name": "incident_date", "description": "", "meta": {}, "data_type": null, "tags": []}, "year": {"name": "year", "description": "", "meta": {}, "data_type": null, "tags": []}, "month": {"name": "month", "description": "", "meta": {}, "data_type": null, "tags": []}, "latitude": {"name": "latitude", "description": "", "meta": {}, "data_type": null, "tags": []}, "longitude": {"name": "longitude", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/crimes_in_boston/staging/stg_crime.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"postgres\".\"dbt\".\"raw_crime\"\n\n),\n\nrenamed as (\n    select\n        INCIDENT_NUMBER as incident_number\n        ,OFFENSE_CODE::INTEGER as offense_code_id\n        ,DISTRICT as district\n        ,OCCURRED_ON_DATE::TIMESTAMP as incident_date\n        ,YEAR::INTEGER as year\n        ,MONTH::INTEGER as month\n        ,Lat::DECIMAL as latitude\n        ,Long::DECIMAL as longitude\n    from source\n    where district is not null\n\n)\nselect distinct * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"postgres\".\"dbt\".\"raw_crime\"\n\n),\n\nrenamed as (\n    select\n        INCIDENT_NUMBER as incident_number\n        ,OFFENSE_CODE::INTEGER as offense_code_id\n        ,DISTRICT as district\n        ,OCCURRED_ON_DATE::TIMESTAMP as incident_date\n        ,YEAR::INTEGER as year\n        ,MONTH::INTEGER as month\n        ,Lat::DECIMAL as latitude\n        ,Long::DECIMAL as longitude\n    from source\n    where district is not null\n\n)\nselect distinct * from renamed", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.025861024856567383, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.891684Z", "completed_at": "2020-05-07T13:54:24.916714Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.916918Z", "completed_at": "2020-05-07T13:54:24.916922Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with offense_codes as (\n\n    select * from {{ ref('stg_offense_codes') }}\n\n),\n\nfinal as (\n    select\n        offense_code_id\n        ,split_part(offense_code_name, ' ', 1) as crime_type\n    from offense_codes\n)\n\nselect * from final", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "marts", "lookup", "lk_crime_type"], "unique_id": "model.crimes_in_boston.lk_crime_type", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "marts/lookup/lk_crime_type.sql", "original_file_path": "models/marts/lookup/lk_crime_type.sql", "name": "lk_crime_type", "resource_type": "model", "alias": "lk_crime_type", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_offense_codes"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.crimes_in_boston.stg_offense_codes"]}, "description": "Lookup table. Crime Types", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/schema.yml", "build_path": "target/compiled/crimes_in_boston/marts/lookup/lk_crime_type.sql", "compiled": true, "compiled_sql": "with offense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        offense_code_id\n        ,split_part(offense_code_name, ' ', 1) as crime_type\n    from offense_codes\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with offense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        offense_code_id\n        ,split_part(offense_code_name, ' ', 1) as crime_type\n    from offense_codes\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.022200822830200195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.918127Z", "completed_at": "2020-05-07T13:54:24.939391Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.939646Z", "completed_at": "2020-05-07T13:54:24.939652Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_offense_codes'), column_name='offense_code_id') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "not_null_stg_offense_codes_offense_code_id"], "unique_id": "test.crimes_in_boston.not_null_stg_offense_codes_offense_code_id", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/not_null_stg_offense_codes_offense_code_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_offense_codes_offense_code_id", "resource_type": "test", "alias": "not_null_stg_offense_codes_offense_code_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_offense_codes"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.crimes_in_boston.stg_offense_codes"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/not_null_stg_offense_codes_offense_code_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_offense_codes\"\nwhere offense_code_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_offense_codes\"\nwhere offense_code_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_offense_codes\"\nwhere offense_code_id is null\n\n", "column_name": "offense_code_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "offense_code_id"}}}, "error": null, "status": null, "execution_time": 0.017368078231811523, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.924461Z", "completed_at": "2020-05-07T13:54:24.940702Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.941056Z", "completed_at": "2020-05-07T13:54:24.941061Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_offense_codes'), column_name='offense_code_id') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "unique_stg_offense_codes_offense_code_id"], "unique_id": "test.crimes_in_boston.unique_stg_offense_codes_offense_code_id", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/unique_stg_offense_codes_offense_code_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_offense_codes_offense_code_id", "resource_type": "test", "alias": "unique_stg_offense_codes_offense_code_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_offense_codes"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.crimes_in_boston.stg_offense_codes"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/unique_stg_offense_codes_offense_code_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        offense_code_id\n\n    from \"postgres\".\"dbt\".\"stg_offense_codes\"\n    where offense_code_id is not null\n    group by offense_code_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        offense_code_id\n\n    from \"postgres\".\"dbt\".\"stg_offense_codes\"\n    where offense_code_id is not null\n    group by offense_code_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        offense_code_id\n\n    from \"postgres\".\"dbt\".\"stg_offense_codes\"\n    where offense_code_id is not null\n    group by offense_code_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "offense_code_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "offense_code_id"}}}, "error": null, "status": null, "execution_time": 0.01753091812133789, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.941298Z", "completed_at": "2020-05-07T13:54:24.949779Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.957487Z", "completed_at": "2020-05-07T13:54:24.957494Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_crime'), column_name='district') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "not_null_stg_crime_district"], "unique_id": "test.crimes_in_boston.not_null_stg_crime_district", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/not_null_stg_crime_district.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_crime_district", "resource_type": "test", "alias": "not_null_stg_crime_district", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_crime"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.crimes_in_boston.stg_crime"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/not_null_stg_crime_district.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere district is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere district is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere district is null\n\n", "column_name": "district", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "district"}}}, "error": null, "status": null, "execution_time": 0.017544984817504883, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.959487Z", "completed_at": "2020-05-07T13:54:24.975449Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.975734Z", "completed_at": "2020-05-07T13:54:24.975742Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_crime'), column_name='incident_number') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "not_null_stg_crime_incident_number"], "unique_id": "test.crimes_in_boston.not_null_stg_crime_incident_number", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/not_null_stg_crime_incident_number.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_crime_incident_number", "resource_type": "test", "alias": "not_null_stg_crime_incident_number", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_crime"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.crimes_in_boston.stg_crime"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/not_null_stg_crime_incident_number.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere incident_number is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere incident_number is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"stg_crime\"\nwhere incident_number is null\n\n", "column_name": "incident_number", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "incident_number"}}}, "error": null, "status": null, "execution_time": 0.017531156539916992, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.967622Z", "completed_at": "2020-05-07T13:54:24.976246Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.976689Z", "completed_at": "2020-05-07T13:54:24.976694Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_crime'), column_name='concat(incident_number, offense_code_id)') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "unique_stg_crime_concat_incident_number_offense_code_id_"], "unique_id": "test.crimes_in_boston.unique_stg_crime_concat_incident_number_offense_code_id_", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/unique_stg_crime_c270f4a95536853e9dfae43c571aed52.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_crime_concat_incident_number_offense_code_id_", "resource_type": "test", "alias": "unique_stg_crime_concat_incident_number_offense_code_id_", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_crime"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.crimes_in_boston.stg_crime"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/unique_stg_crime_c270f4a95536853e9dfae43c571aed52.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        concat(incident_number, offense_code_id)\n\n    from \"postgres\".\"dbt\".\"stg_crime\"\n    where concat(incident_number, offense_code_id) is not null\n    group by concat(incident_number, offense_code_id)\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        concat(incident_number, offense_code_id)\n\n    from \"postgres\".\"dbt\".\"stg_crime\"\n    where concat(incident_number, offense_code_id) is not null\n    group by concat(incident_number, offense_code_id)\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        concat(incident_number, offense_code_id)\n\n    from \"postgres\".\"dbt\".\"stg_crime\"\n    where concat(incident_number, offense_code_id) is not null\n    group by concat(incident_number, offense_code_id)\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": null, "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "concat(incident_number, offense_code_id)"}}}, "error": null, "status": null, "execution_time": 0.01749706268310547, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.983446Z", "completed_at": "2020-05-07T13:54:24.994204Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.994652Z", "completed_at": "2020-05-07T13:54:24.994659Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('stg_crime'), column_name='offense_code_id', field='offense_code_id', to=ref(\"stg_offense_codes\")) }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "relationships_stg_crime_offense_code_id__offense_code_id__ref_stg_offense_codes_"], "unique_id": "test.crimes_in_boston.relationships_stg_crime_offense_code_id__offense_code_id__ref_stg_offense_codes_", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/relationships_stg_crime_514d4c7006efaa7c156e96b04de21ad1.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_crime_offense_code_id__offense_code_id__ref_stg_offense_codes_", "resource_type": "test", "alias": "relationships_stg_crime_offense_code_id__offense_code_id__ref_stg_offense_codes_", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_crime"], ["stg_offense_codes"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.crimes_in_boston.stg_crime", "model.crimes_in_boston.stg_offense_codes"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/relationships_stg_crime_514d4c7006efaa7c156e96b04de21ad1.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_crime\"\n) as child\nleft join (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_offense_codes\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_crime\"\n) as child\nleft join (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_offense_codes\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_crime\"\n) as child\nleft join (\n    select offense_code_id as id from \"postgres\".\"dbt\".\"stg_offense_codes\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "offense_code_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref(\"stg_offense_codes\")", "field": "offense_code_id", "column_name": "offense_code_id"}}}, "error": null, "status": null, "execution_time": 0.0186769962310791, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:24.977689Z", "completed_at": "2020-05-07T13:54:24.994431Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:24.994891Z", "completed_at": "2020-05-07T13:54:24.994897Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with crimes as (\n\n    select * from {{ ref('crimes_joined') }}\n\n),\n\nfinal as (\n    select\n        district\n        ,round(avg(latitude), 5) as latitude\n        ,round(avg(longitude), 5) as longitude\n    from crimes\n    group by 1\n)\n\nselect * from final", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "marts", "lookup", "lk_district_coordinates"], "unique_id": "model.crimes_in_boston.lk_district_coordinates", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "marts/lookup/lk_district_coordinates.sql", "original_file_path": "models/marts/lookup/lk_district_coordinates.sql", "name": "lk_district_coordinates", "resource_type": "model", "alias": "lk_district_coordinates", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["crimes_joined"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.crimes_in_boston.crimes_joined"]}, "description": "Lookup table. Coordinates (Long/Lat) of Districts", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/schema.yml", "build_path": "target/compiled/crimes_in_boston/marts/lookup/lk_district_coordinates.sql", "compiled": true, "compiled_sql": "with crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select\n        district\n        ,round(avg(latitude), 5) as latitude\n        ,round(avg(longitude), 5) as longitude\n    from crimes\n    group by 1\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.crimes_in_boston.crimes_joined", "sql": " __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n)"}], "injected_sql": "with  __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n),crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select\n        district\n        ,round(avg(latitude), 5) as latitude\n        ,round(avg(longitude), 5) as longitude\n    from crimes\n    group by 1\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.028422117233276367, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.020600Z", "completed_at": "2020-05-07T13:54:25.047659Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.047907Z", "completed_at": "2020-05-07T13:54:25.047915Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with crime_types as (\n    select * from {{ ref('lk_crime_type') }}\n),\n\ncrimes as (\n    select * from {{ ref('crimes_joined') }}\n),\n\ncnt_crime_type_by_district as (\n    select\n        t1.district\n        ,t2.crime_type\n        ,count(*) as cnt\n        ,row_number() over (PARTITION BY district ORDER BY count(*) desc) as rn\n    from crimes t1\n        join crime_types t2 on t1.offense_code_id = t2.offense_code_id\n    group by t1.district, t2.crime_type\n),\n\nfinal as (\n    select\n        district\n        , array_agg(crime_type) as frequent_crime_types\n    from cnt_crime_type_by_district\n    where rn <= 3\n    group by 1\n)\n\n\nselect * from final", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "marts", "lookup", "lk_frequent_crime_types"], "unique_id": "model.crimes_in_boston.lk_frequent_crime_types", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "marts/lookup/lk_frequent_crime_types.sql", "original_file_path": "models/marts/lookup/lk_frequent_crime_types.sql", "name": "lk_frequent_crime_types", "resource_type": "model", "alias": "lk_frequent_crime_types", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["lk_crime_type"], ["crimes_joined"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.crimes_in_boston.lk_crime_type", "model.crimes_in_boston.crimes_joined"]}, "description": "Lookup table. Top 3 most frequent crimes by District", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/schema.yml", "build_path": "target/compiled/crimes_in_boston/marts/lookup/lk_frequent_crime_types.sql", "compiled": true, "compiled_sql": "with crime_types as (\n    select * from \"postgres\".\"dbt\".\"lk_crime_type\"\n),\n\ncrimes as (\n    select * from __dbt__CTE__crimes_joined\n),\n\ncnt_crime_type_by_district as (\n    select\n        t1.district\n        ,t2.crime_type\n        ,count(*) as cnt\n        ,row_number() over (PARTITION BY district ORDER BY count(*) desc) as rn\n    from crimes t1\n        join crime_types t2 on t1.offense_code_id = t2.offense_code_id\n    group by t1.district, t2.crime_type\n),\n\nfinal as (\n    select\n        district\n        , array_agg(crime_type) as frequent_crime_types\n    from cnt_crime_type_by_district\n    where rn <= 3\n    group by 1\n)\n\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.crimes_in_boston.crimes_joined", "sql": " __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n)"}], "injected_sql": "with  __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n),crime_types as (\n    select * from \"postgres\".\"dbt\".\"lk_crime_type\"\n),\n\ncrimes as (\n    select * from __dbt__CTE__crimes_joined\n),\n\ncnt_crime_type_by_district as (\n    select\n        t1.district\n        ,t2.crime_type\n        ,count(*) as cnt\n        ,row_number() over (PARTITION BY district ORDER BY count(*) desc) as rn\n    from crimes t1\n        join crime_types t2 on t1.offense_code_id = t2.offense_code_id\n    group by t1.district, t2.crime_type\n),\n\nfinal as (\n    select\n        district\n        , array_agg(crime_type) as frequent_crime_types\n    from cnt_crime_type_by_district\n    where rn <= 3\n    group by 1\n)\n\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.028779029846191406, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.026208Z", "completed_at": "2020-05-07T13:54:25.048604Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.049081Z", "completed_at": "2020-05-07T13:54:25.049086Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with crimes as (\n\n    select * from {{ ref('crimes_joined') }}\n\n),\n\nfinal as (\n    select distinct\n        incident_number\n        ,incident_date\n        ,ARRAY_AGG( offense_code_id ) as offense_codes\n    from crimes\n    group by 1,2\n)\n\nselect * from final", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "marts", "fct_crimes"], "unique_id": "model.crimes_in_boston.fct_crimes", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "marts/fct_crimes.sql", "original_file_path": "models/marts/fct_crimes.sql", "name": "fct_crimes", "resource_type": "model", "alias": "fct_crimes", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["crimes_joined"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.crimes_in_boston.crimes_joined"]}, "description": "all crime incidents", "columns": {"incident_number": {"name": "incident_number", "description": "(PK) crime ID", "meta": {}, "data_type": null, "tags": []}, "incident_date": {"name": "incident_date", "description": "Date when crime was occured", "meta": {}, "data_type": null, "tags": []}, "offense_codes": {"name": "offense_codes", "description": "array of offense_codes", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/schema.yml", "build_path": "target/compiled/crimes_in_boston/marts/fct_crimes.sql", "compiled": true, "compiled_sql": "with crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select distinct\n        incident_number\n        ,incident_date\n        ,ARRAY_AGG( offense_code_id ) as offense_codes\n    from crimes\n    group by 1,2\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.crimes_in_boston.crimes_joined", "sql": " __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n)"}], "injected_sql": "with  __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n),crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select distinct\n        incident_number\n        ,incident_date\n        ,ARRAY_AGG( offense_code_id ) as offense_codes\n    from crimes\n    group by 1,2\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.029568195343017578, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.049635Z", "completed_at": "2020-05-07T13:54:25.066897Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.077921Z", "completed_at": "2020-05-07T13:54:25.077931Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with crimes_total as (\n    select * from {{ ref('crimes_total_groupped_by_district') }}\n),\n\ncrimes_monthly_median as (\n    select * from {{ ref('crimes_monthly_median_groupped_by_district') }}\n),\n\ndistrict_coordinates as (\n    select * from {{ ref('lk_district_coordinates') }}\n),\n\nfrequent_crime_types as (\n    select * from {{ ref('lk_frequent_crime_types') }}\n),\n\n\nfinal as (\n    select\n        t1.*\n        ,t2.crimes_monthly\n        ,t4.frequent_crime_types\n        ,t3.latitude\n        ,t3.longitude\n    from crimes_total t1\n        join crimes_monthly_median t2 on t1.district = t2.district\n        join district_coordinates t3 on t1.district = t3.district\n        join frequent_crime_types t4 on t1.district = t4.district\n)\n\nselect * from final", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "marts", "dim_crime_by_district"], "unique_id": "model.crimes_in_boston.dim_crime_by_district", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "marts/dim_crime_by_district.sql", "original_file_path": "models/marts/dim_crime_by_district.sql", "name": "dim_crime_by_district", "resource_type": "model", "alias": "dim_crime_by_district", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["crimes_total_groupped_by_district"], ["crimes_monthly_median_groupped_by_district"], ["lk_district_coordinates"], ["lk_frequent_crime_types"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.crimes_in_boston.crimes_total_groupped_by_district", "model.crimes_in_boston.crimes_monthly_median_groupped_by_district", "model.crimes_in_boston.lk_district_coordinates", "model.crimes_in_boston.lk_frequent_crime_types"]}, "description": "metrics by every Boston District", "columns": {"district": {"name": "district", "description": "(PK) Boston's district ", "meta": {}, "data_type": null, "tags": []}, "crimes_total": {"name": "crimes_total", "description": "Total count of crimes by District", "meta": {}, "data_type": null, "tags": []}, "crimes_monthly": {"name": "crimes_monthly", "description": "Monthly median of crimes by District", "meta": {}, "data_type": null, "tags": []}, "frequent_crime_types": {"name": "frequent_crime_types", "description": "Top 3 most frequent crimes by District", "meta": {}, "data_type": null, "tags": []}, "latitude": {"name": "latitude", "description": "latitude of  district", "meta": {}, "data_type": null, "tags": []}, "longitude": {"name": "longitude", "description": "longitude of district", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/schema.yml", "build_path": "target/compiled/crimes_in_boston/marts/dim_crime_by_district.sql", "compiled": true, "compiled_sql": "with crimes_total as (\n    select * from __dbt__CTE__crimes_total_groupped_by_district\n),\n\ncrimes_monthly_median as (\n    select * from __dbt__CTE__crimes_monthly_median_groupped_by_district\n),\n\ndistrict_coordinates as (\n    select * from \"postgres\".\"dbt\".\"lk_district_coordinates\"\n),\n\nfrequent_crime_types as (\n    select * from \"postgres\".\"dbt\".\"lk_frequent_crime_types\"\n),\n\n\nfinal as (\n    select\n        t1.*\n        ,t2.crimes_monthly\n        ,t4.frequent_crime_types\n        ,t3.latitude\n        ,t3.longitude\n    from crimes_total t1\n        join crimes_monthly_median t2 on t1.district = t2.district\n        join district_coordinates t3 on t1.district = t3.district\n        join frequent_crime_types t4 on t1.district = t4.district\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.crimes_in_boston.crimes_joined", "sql": " __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n)"}, {"id": "model.crimes_in_boston.crimes_total_groupped_by_district", "sql": " __dbt__CTE__crimes_total_groupped_by_district as (\n\n\n\nwith crimes as (\n\n    select district, incident_number from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select\n        district\n        ,count(incident_number) as crimes_total\n    from crimes\n    group by 1\n)\n\nselect * from final\n)"}, {"id": "model.crimes_in_boston.crimes_monthly_median_groupped_by_district", "sql": " __dbt__CTE__crimes_monthly_median_groupped_by_district as (\n\n\n\nwith crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\ncrimes_monthly_raw as (\n    select\n        district\n        ,year\n        ,month\n        ,count(incident_number) as crimes_total\n    from crimes\n    group by 1,2,3\n),\n\nfinal as (\n    select\n        district\n        ,ROUND(PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY crimes_total)::numeric, 0) AS crimes_monthly\n    from crimes_monthly_raw\n    group by 1\n)\n\nselect * from final\n)"}], "injected_sql": "with  __dbt__CTE__crimes_joined as (\n\n\n\nwith crime as (\n\n    select * from \"postgres\".\"dbt\".\"stg_crime\"\n\n),\n\noffense_codes as (\n\n    select * from \"postgres\".\"dbt\".\"stg_offense_codes\"\n\n),\n\nfinal as (\n    select\n        c.*\n        ,oc.offense_code_name\n    from crime c\n    join offense_codes oc on c.offense_code_id = oc.offense_code_id\n)\n\nselect * from final\n),  __dbt__CTE__crimes_total_groupped_by_district as (\n\n\n\nwith crimes as (\n\n    select district, incident_number from __dbt__CTE__crimes_joined\n\n),\n\nfinal as (\n    select\n        district\n        ,count(incident_number) as crimes_total\n    from crimes\n    group by 1\n)\n\nselect * from final\n),  __dbt__CTE__crimes_monthly_median_groupped_by_district as (\n\n\n\nwith crimes as (\n\n    select * from __dbt__CTE__crimes_joined\n\n),\n\ncrimes_monthly_raw as (\n    select\n        district\n        ,year\n        ,month\n        ,count(incident_number) as crimes_total\n    from crimes\n    group by 1,2,3\n),\n\nfinal as (\n    select\n        district\n        ,ROUND(PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY crimes_total)::numeric, 0) AS crimes_monthly\n    from crimes_monthly_raw\n    group by 1\n)\n\nselect * from final\n),crimes_total as (\n    select * from __dbt__CTE__crimes_total_groupped_by_district\n),\n\ncrimes_monthly_median as (\n    select * from __dbt__CTE__crimes_monthly_median_groupped_by_district\n),\n\ndistrict_coordinates as (\n    select * from \"postgres\".\"dbt\".\"lk_district_coordinates\"\n),\n\nfrequent_crime_types as (\n    select * from \"postgres\".\"dbt\".\"lk_frequent_crime_types\"\n),\n\n\nfinal as (\n    select\n        t1.*\n        ,t2.crimes_monthly\n        ,t4.frequent_crime_types\n        ,t3.latitude\n        ,t3.longitude\n    from crimes_total t1\n        join crimes_monthly_median t2 on t1.district = t2.district\n        join district_coordinates t3 on t1.district = t3.district\n        join frequent_crime_types t4 on t1.district = t4.district\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.02266693115234375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.060564Z", "completed_at": "2020-05-07T13:54:25.081998Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.082333Z", "completed_at": "2020-05-07T13:54:25.082339Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_crimes'), column_name='incident_number') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "not_null_fct_crimes_incident_number"], "unique_id": "test.crimes_in_boston.not_null_fct_crimes_incident_number", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/not_null_fct_crimes_incident_number.sql", "original_file_path": "models/marts/schema.yml", "name": "not_null_fct_crimes_incident_number", "resource_type": "test", "alias": "not_null_fct_crimes_incident_number", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_crimes"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.crimes_in_boston.fct_crimes"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/not_null_fct_crimes_incident_number.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"fct_crimes\"\nwhere incident_number is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"fct_crimes\"\nwhere incident_number is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"fct_crimes\"\nwhere incident_number is null\n\n", "column_name": "incident_number", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "incident_number"}}}, "error": null, "status": null, "execution_time": 0.018150806427001953, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.082550Z", "completed_at": "2020-05-07T13:54:25.099225Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.099515Z", "completed_at": "2020-05-07T13:54:25.099522Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('fct_crimes'), column_name='incident_number') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "unique_fct_crimes_incident_number"], "unique_id": "test.crimes_in_boston.unique_fct_crimes_incident_number", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/unique_fct_crimes_incident_number.sql", "original_file_path": "models/marts/schema.yml", "name": "unique_fct_crimes_incident_number", "resource_type": "test", "alias": "unique_fct_crimes_incident_number", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_crimes"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.crimes_in_boston.fct_crimes"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/unique_fct_crimes_incident_number.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        incident_number\n\n    from \"postgres\".\"dbt\".\"fct_crimes\"\n    where incident_number is not null\n    group by incident_number\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        incident_number\n\n    from \"postgres\".\"dbt\".\"fct_crimes\"\n    where incident_number is not null\n    group by incident_number\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        incident_number\n\n    from \"postgres\".\"dbt\".\"fct_crimes\"\n    where incident_number is not null\n    group by incident_number\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "incident_number", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "incident_number"}}}, "error": null, "status": null, "execution_time": 0.010247945785522461, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.091123Z", "completed_at": "2020-05-07T13:54:25.100021Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.100436Z", "completed_at": "2020-05-07T13:54:25.100441Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('dim_crime_by_district'), column_name='district') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "not_null_dim_crime_by_district_district"], "unique_id": "test.crimes_in_boston.not_null_dim_crime_by_district_district", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/not_null_dim_crime_by_district_district.sql", "original_file_path": "models/marts/schema.yml", "name": "not_null_dim_crime_by_district_district", "resource_type": "test", "alias": "not_null_dim_crime_by_district_district", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_crime_by_district"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.crimes_in_boston.dim_crime_by_district"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/not_null_dim_crime_by_district_district.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"dim_crime_by_district\"\nwhere district is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"dim_crime_by_district\"\nwhere district is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"dbt\".\"dim_crime_by_district\"\nwhere district is null\n\n", "column_name": "district", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "district"}}}, "error": null, "status": null, "execution_time": 0.01751708984375, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.101383Z", "completed_at": "2020-05-07T13:54:25.117016Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.117515Z", "completed_at": "2020-05-07T13:54:25.117524Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('dim_crime_by_district'), column_name='district') }}", "database": "postgres", "schema": "dbt", "fqn": ["crimes_in_boston", "schema_test", "unique_dim_crime_by_district_district"], "unique_id": "test.crimes_in_boston.unique_dim_crime_by_district_district", "package_name": "crimes_in_boston", "root_path": "/Users/andreyev/Projects/Github/dbt_test", "path": "schema_test/unique_dim_crime_by_district_district.sql", "original_file_path": "models/marts/schema.yml", "name": "unique_dim_crime_by_district_district", "resource_type": "test", "alias": "unique_dim_crime_by_district_district", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_crime_by_district"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.crimes_in_boston.dim_crime_by_district"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/crimes_in_boston/schema_test/unique_dim_crime_by_district_district.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        district\n\n    from \"postgres\".\"dbt\".\"dim_crime_by_district\"\n    where district is not null\n    group by district\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        district\n\n    from \"postgres\".\"dbt\".\"dim_crime_by_district\"\n    where district is not null\n    group by district\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        district\n\n    from \"postgres\".\"dbt\".\"dim_crime_by_district\"\n    where district is not null\n    group by district\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "district", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "district"}}}, "error": null, "status": null, "execution_time": 0.016967058181762695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-07T13:54:25.109158Z", "completed_at": "2020-05-07T13:54:25.117256Z"}, {"name": "execute", "started_at": "2020-05-07T13:54:25.117770Z", "completed_at": "2020-05-07T13:54:25.117776Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-05-07T13:54:25.184984Z", "elapsed_time": 0.3145260810852051}